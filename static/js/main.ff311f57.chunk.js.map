{"version":3,"sources":["Table.js","form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","ReactDOM","render","document","getElementById"],"mappings":"+OAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACA,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,cAMN,OAAO,+BAAQJ,IAgBFU,E,iLAZH,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAP9CG,a,OCqBLC,E,YAhDb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAWRe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MACd,EAAKC,SAAL,eACCZ,EAAOW,KAfS,EAqBnBE,WAAa,WACb,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eApBjB,EAAKA,aAAe,CAClBhB,KAAM,GACNC,IAAK,IAGP,EAAKc,MAAQ,EAAKC,aARD,E,sEA0BT,IAAD,EACaX,KAAKU,MAAnBf,EADC,EACDA,KAAMC,EADL,EACKA,IAEd,OACE,8BACE,uCACA,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACjB,sCACA,2BACES,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACnB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA5CnCP,aCmCJa,E,2MAhCbJ,MAAQ,CACNK,WAAY,I,EAGdjB,gBAAkB,SAAAL,GAAS,IACnBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,OAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,O,EAKjBgB,aAAe,SAAAQ,GACf,EAAKV,SAAS,CAAEQ,WAAU,sBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAG9C,IAEAF,EAAc,KAAKL,MAAnBK,WAEP,OAEA,yBAAK,UAAU,aACf,kBAAC,EAAD,CAAO,cAAeA,EAAY,gBAAiB,KAAKjB,kBACxD,kBAAC,EAAD,CAAM,aAAc,KAAKW,oB,GA3BXR,a,MCElBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ff311f57.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = props => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n        <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n\n  return <tbody>{rows}</tbody>;\n}\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props;\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n      </table>\n    )\n  }\n}\n\nexport default Table;","import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      name: '',\n      job: '',\n    }\n\n    this.state = this.initialState;\n\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n    [name]: value,\n    })\n    }\n\n  \n\n  submitForm = () => {\n  this.props.handleSubmit(this.state);\n  this.setState(this.initialState);\n  }\n\n  render() {\n  const { name, job } = this.state;\n\n  return (\n    <form>\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={this.handleChange} />\n      <label>Job</label>\n      <input\n        type=\"text\"\n        name=\"job\"\n        value={job}\n        onChange={this.handleChange} />\n    <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n    </form>\n  );\n}\n}\nexport default Form;\n\n\n","import React, { Component } from 'react';\rimport Table from './Table';\rimport Form from './form';\r\rclass App extends Component {\r  state = {\r    characters: [],\r    }\r\r  removeCharacter = index => {\r  const { characters } = this.state;\r\r  this.setState({\r    characters: characters.filter((character, i) => {\r      return i !== index;\r    }),\r  })\r  }\r\r  handleSubmit = character => {\r  this.setState({ characters: [...this.state.characters, character] })\r  }\r\r  render() {\r\r    const {characters} = this.state;\r\r    return (\r\r    <div className=\"container\">\r    <Table characterData={characters} removeCharacter={this.removeCharacter} />\r    <Form handleSubmit={this.handleSubmit} />\r    </div>\r    )\r  }\r}\r\rexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n//import App from './api'; \nimport './index.css'; \n\nReactDOM.render(<App />, document.getElementById('root')); "],"sourceRoot":""}